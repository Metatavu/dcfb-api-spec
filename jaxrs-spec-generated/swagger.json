{
  "swagger" : "2.0",
  "info" : {
    "description" : "API spec for DCFB API.",
    "version" : "0.0.1",
    "title" : "DCFB API"
  },
  "basePath" : "/v1",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json;charset=utf-8" ],
  "produces" : [ "application/json;charset=utf-8" ],
  "security" : [ {
    "bearer" : [ ]
  } ],
  "paths" : {
    "/items" : {
      "get" : {
        "tags" : [ "Items" ],
        "summary" : "List items",
        "description" : "List items",
        "operationId" : "listItems",
        "parameters" : [ {
          "name" : "categoryIds",
          "in" : "query",
          "description" : "Filter by category ids (comma delimitered)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "locationIds",
          "in" : "query",
          "description" : "Filter by location ids (comma delimitered)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userIds",
          "in" : "query",
          "description" : "Filter by user ids (comma delimitered)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search by free-text query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of items",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Item"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Items" ],
        "summary" : "Create item",
        "description" : "Create item",
        "operationId" : "createItem",
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Item"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created item",
            "schema" : {
              "$ref" : "#/definitions/Item"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/items/{itemId}" : {
      "get" : {
        "tags" : [ "Items" ],
        "summary" : "Finds an item",
        "description" : "Find item",
        "operationId" : "findItem",
        "parameters" : [ {
          "name" : "itemId",
          "in" : "path",
          "description" : "Item id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "An item",
            "schema" : {
              "$ref" : "#/definitions/Item"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Items" ],
        "summary" : "updates an item",
        "description" : "Update item",
        "operationId" : "updateItem",
        "parameters" : [ {
          "name" : "itemId",
          "in" : "path",
          "description" : "Item id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Item"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updated item",
            "schema" : {
              "$ref" : "#/definitions/Item"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Items" ],
        "summary" : "deletes an item",
        "description" : "Delete item",
        "operationId" : "deleteItem",
        "parameters" : [ {
          "name" : "itemId",
          "in" : "path",
          "description" : "Item id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty resonse indicating a successful removal"
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/items/{itemId}/reservations" : {
      "post" : {
        "tags" : [ "Items" ],
        "summary" : "Create item",
        "description" : "Create item",
        "operationId" : "createItemReservation",
        "parameters" : [ {
          "name" : "itemId",
          "in" : "path",
          "description" : "Item id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ItemReservation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created item reservation",
            "schema" : {
              "$ref" : "#/definitions/ItemReservation"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/purchaseRequests" : {
      "get" : {
        "tags" : [ "PurchaseRequests" ],
        "summary" : "List purchase requests",
        "description" : "List purchase requests",
        "operationId" : "list purchase requests",
        "parameters" : [ {
          "name" : "categoryIds",
          "in" : "query",
          "description" : "Filter by category ids (comma delimitered)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search  by free-text query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of purchase requests",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PurchaseRequest"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PurchaseRequests" ],
        "summary" : "Create purchase request",
        "description" : "Create purchase request",
        "operationId" : "createPurchaseRequest",
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PurchaseRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created purchaseRequest",
            "schema" : {
              "$ref" : "#/definitions/PurchaseRequest"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/purchaseRequests/{purchaseRequestId}" : {
      "get" : {
        "tags" : [ "PurchaseRequests" ],
        "summary" : "Finds an purchaseRequest",
        "description" : "Find purchaseRequest",
        "operationId" : "findPurchaseRequest",
        "parameters" : [ {
          "name" : "purchaseRequestId",
          "in" : "path",
          "description" : "PurchaseRequest id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of purchase requests",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PurchaseRequest"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "PurchaseRequests" ],
        "summary" : "updates an purchase request",
        "description" : "Update purchase request",
        "operationId" : "updatePurchaseRequest",
        "parameters" : [ {
          "name" : "purchaseRequestId",
          "in" : "path",
          "description" : "PurchaseRequest id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PurchaseRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updated purchaseRequest",
            "schema" : {
              "$ref" : "#/definitions/PurchaseRequest"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PurchaseRequests" ],
        "summary" : "deletes an purchase request",
        "description" : "Delete purchase request",
        "operationId" : "deletePurchaseRequest",
        "parameters" : [ {
          "name" : "purchaseRequestId",
          "in" : "path",
          "description" : "PurchaseRequest id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty resonse indicating a successful removal"
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/categories" : {
      "get" : {
        "tags" : [ "Categories" ],
        "summary" : "List categories",
        "description" : "List categories",
        "operationId" : "listCategories",
        "parameters" : [ {
          "name" : "parentId",
          "in" : "query",
          "description" : "Filter by parent category id",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search by free-text query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "slug",
          "in" : "query",
          "description" : "Filter by category slug",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort results. See CategoryListSort for sort options",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of categories",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Category"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Categories" ],
        "summary" : "Create category",
        "description" : "Create category",
        "operationId" : "createCategory",
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Category"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created category",
            "schema" : {
              "$ref" : "#/definitions/Category"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/categories/{categoryId}" : {
      "get" : {
        "tags" : [ "Categories" ],
        "summary" : "Finds an category",
        "description" : "Find category",
        "operationId" : "findCategory",
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Category id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "A category",
            "schema" : {
              "$ref" : "#/definitions/Category"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Categories" ],
        "summary" : "updates an category",
        "description" : "Update category",
        "operationId" : "updateCategory",
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Category id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Category"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updated category",
            "schema" : {
              "$ref" : "#/definitions/Category"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Categories" ],
        "summary" : "deletes an category",
        "description" : "Delete category",
        "operationId" : "deleteCategory",
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Category id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty resonse indicating a successful removal"
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/locations" : {
      "get" : {
        "tags" : [ "Locations" ],
        "summary" : "List locations",
        "description" : "List locations",
        "operationId" : "listLocations",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "Search by free-text query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "slug",
          "in" : "query",
          "description" : "Filter by location slug",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort results. See LocationListSort for sort options",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of locations",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Location"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Locations" ],
        "summary" : "Create location",
        "description" : "Create location",
        "operationId" : "createLocation",
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Location"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created location",
            "schema" : {
              "$ref" : "#/definitions/Location"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/locations/{locationId}" : {
      "get" : {
        "tags" : [ "Locations" ],
        "summary" : "Finds an location",
        "description" : "Find location",
        "operationId" : "findLocation",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "Location id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "A location",
            "schema" : {
              "$ref" : "#/definitions/Location"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Locations" ],
        "summary" : "updates an location",
        "description" : "Update location",
        "operationId" : "updateLocation",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "Location id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Location"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updated location",
            "schema" : {
              "$ref" : "#/definitions/Location"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Locations" ],
        "summary" : "deletes an location",
        "description" : "Delete location",
        "operationId" : "deleteLocation",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "Location id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty resonse indicating a successful removal"
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "bearer" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "LocalizedValue" : {
      "type" : "object",
      "required" : [ "language", "type", "value" ],
      "properties" : {
        "language" : {
          "type" : "string",
          "minLength" : 2,
          "maxLength" : 2
        },
        "value" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "Address" : {
      "type" : "object",
      "properties" : {
        "streetAddress" : {
          "type" : "string",
          "description" : "Street address."
        },
        "postalCode" : {
          "type" : "string",
          "description" : "Postal code, for example 00010."
        },
        "postOffice" : {
          "type" : "string",
          "description" : "Post office"
        },
        "country" : {
          "type" : "string",
          "description" : "Country code (ISO 3166-1 alpha-2), for example FI."
        },
        "additionalInformations" : {
          "type" : "array",
          "description" : "Localized list of additional information about the address.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        }
      }
    },
    "Coordinate" : {
      "type" : "object",
      "properties" : {
        "crs" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "string",
          "description" : "latitude coordinate."
        },
        "longitude" : {
          "type" : "string",
          "description" : "longitude coordinate."
        }
      }
    },
    "Category" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Category id"
        },
        "parentId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Category parent id."
        },
        "title" : {
          "type" : "array",
          "description" : "Title of the category, multilingual",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "slug" : {
          "type" : "string",
          "description" : "Category slug"
        },
        "meta" : {
          "type" : "array",
          "description" : "Meta parameters",
          "items" : {
            "$ref" : "#/definitions/Meta"
          }
        }
      }
    },
    "Price" : {
      "type" : "object",
      "properties" : {
        "price" : {
          "type" : "string",
          "description" : "price with two decimal places. e.g. 13.00"
        },
        "currency" : {
          "type" : "string",
          "description" : "Currency code (ISO 4217)"
        }
      }
    },
    "Location" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Location id"
        },
        "name" : {
          "type" : "array",
          "description" : "Name of the location, multilingual",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "coordinate" : {
          "$ref" : "#/definitions/Coordinate"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        }
      }
    },
    "Image" : {
      "type" : "object",
      "required" : [ "type", "url" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Image id"
        },
        "url" : {
          "type" : "string",
          "description" : "Image URL"
        },
        "type" : {
          "type" : "string",
          "description" : "Image type"
        }
      }
    },
    "Item" : {
      "type" : "object",
      "required" : [ "amount", "categoryId", "unit", "unitPrice" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Item id"
        },
        "title" : {
          "type" : "array",
          "description" : "Title of the item, multilingual",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "description" : {
          "type" : "array",
          "description" : "Description of the item, multilingual",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "categoryId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Category id."
        },
        "locationId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Location id."
        },
        "slug" : {
          "type" : "string",
          "description" : "Item slug"
        },
        "sellerId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Sellers user id"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "expiresAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "images" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Image"
          }
        },
        "visibleToUsers" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "visibilityLimited" : {
          "type" : "boolean"
        },
        "unitPrice" : {
          "$ref" : "#/definitions/Price"
        },
        "unit" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "reservedAmount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "soldAmount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "meta" : {
          "type" : "array",
          "description" : "Item meta",
          "items" : {
            "$ref" : "#/definitions/Meta"
          }
        }
      }
    },
    "ItemReservation" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Item id"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "PurchaseRequest" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Purchase request id"
        },
        "title" : {
          "type" : "array",
          "description" : "Title of the item, multilingual",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "description" : {
          "type" : "array",
          "description" : "Description of the item, multilingual",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "categoryId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Category id."
        },
        "slug" : {
          "type" : "string",
          "description" : "Item slug"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "expiresAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "unit" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "number",
          "format" : "int64"
        },
        "meta" : {
          "type" : "array",
          "description" : "Request meta",
          "items" : {
            "$ref" : "#/definitions/Meta"
          }
        }
      }
    },
    "ItemListSort" : {
      "type" : "string",
      "enum" : [ "CREATED_AT_DESC", "CREATED_AT_ASC", "MODIFIED_AT_DESC", "MODIFIED_AT_ASC", "SCORE_DESC", "SCORE_ASC" ]
    },
    "CategoryListSort" : {
      "type" : "string",
      "enum" : [ "CREATED_AT_DESC", "CREATED_AT_ASC", "MODIFIED_AT_DESC", "MODIFIED_AT_ASC", "SCORE_DESC", "SCORE_ASC" ]
    },
    "LocationListSort" : {
      "type" : "string",
      "enum" : [ "CREATED_AT_DESC", "CREATED_AT_ASC", "MODIFIED_AT_DESC", "MODIFIED_AT_ASC", "SCORE_DESC", "SCORE_ASC" ]
    },
    "Meta" : {
      "type" : "object",
      "required" : [ "key", "value" ],
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      },
      "description" : "Key-value pair that can be used to add meta data to objects (items, categories, etc)"
    },
    "InternalServerError" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "Forbidden" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "BadRequest" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "NotImplemented" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "NotFound" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    }
  }
}