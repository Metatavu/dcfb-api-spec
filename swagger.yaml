swagger: '2.0'
info:
  title: DCFB API
  description: API spec for DCFB API.
  version: "0.0.1"
schemes:
  - https
basePath: /v1
securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - bearer: []
consumes:
  - application/json;charset=utf-8
produces:
  - application/json;charset=utf-8
paths:

  /items:
    get:
      operationId: listItems
      summary: List items
      description: List items
      parameters:
        - name: categoryIds
          in: query
          description: Filter by category ids (comma delimitered)
          type: string
        - name: locationIds
          in: query
          description: Filter by location ids (comma delimitered)
          type: string
        - name: userIds
          in: query
          description: Filter by user ids (comma delimitered)
          type: string
        - name: search
          in: query
          description: Search by free-text query
          required: false
          type: string
        - name: nearLat
          in: query
          description: Prefer results near geo-point
          required: false
          type: number
          format: double
        - name: nearLon
          in: query
          description: Prefer results near geo-point
          required: false
          type: number
          format: double
        - name: includeExhausted
          in: query
          type: boolean
          required: false
          description: Whether to include items without any items in stock. Defaults to false
        - name: sort
          in: query
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: firstResult
          in: query
          description: First result
          required: false
          type: integer
          format: int64
        - name: maxResults
          in: query
          description: Max results
          required: false
          type: integer
          format: int64
      tags:
        - Items
      responses:
        200:
          description: An array of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Item'
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    post:
      operationId: createItem
      summary: Create item
      description: Create item
      parameters:
        - name: payload
          in: body
          description: Payload
          required: true
          schema:
            $ref: '#/definitions/Item'
      tags:
        - Items
      responses:
        200:
          description: Created item
          schema:
            $ref: '#/definitions/Item'
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/items/{itemId}':
    get:
      operationId: findItem
      summary: Finds an item
      description: Find item
      parameters:
        - name: itemId
          required: true
          in: path
          description: Item id
          type: string
          format: uuid
      tags:
        - Items
      responses:
        200:
          description: An item
          schema:
            $ref: '#/definitions/Item'
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    put:
      operationId: updateItem
      summary: updates an item
      description: Update item
      parameters:
        - name: itemId
          required: true
          in: path
          description: Item id
          type: string
          format: uuid
        - name: payload
          in: body
          description: Payload
          required: true
          schema:
            $ref: '#/definitions/Item'
      tags:
        - Items
      responses:
        200:
          description: Updated item
          schema:
            $ref: '#/definitions/Item'
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    delete:
      operationId: deleteItem
      summary: deletes an item
      description: Delete item
      parameters:
        - name: itemId
          required: true
          in: path
          description: Item id
          type: string
          format: uuid
      tags:
        - Items
      responses:
        204:
          description: Empty resonse indicating a successful removal
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
            
  '/items/{itemId}/reservations':
    post:
      operationId: createItemReservation
      summary: Create item reservation
      description: Create item reservation
      parameters:
        - name: itemId
          required: true
          in: path
          description: Item id
          type: string
          format: uuid
        - name: payload
          in: body
          description: Payload
          required: true
          schema:
            $ref: '#/definitions/ItemReservation'
      tags:
        - Items
      responses:
        200:
          description: Created item reservation
          schema:
            $ref: '#/definitions/ItemReservation'
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/items/{itemId}/reservations/{itemReservationId}':
    get:
      operationId: findItemReservation
      summary: Find item reservation
      description: Find item reservation
      parameters:
        - name: itemId
          required: true
          in: path
          description: Item id
          type: string
          format: uuid
        - name: itemReservationId
          required: true
          in: path
          description: Item id
          type: string
          format: uuid
      tags:
        - Items
      responses:
        200:
          description: Found item reservation
          schema:
            $ref: '#/definitions/ItemReservation'
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'

  /categories:
    get:
      operationId: listCategories
      summary: List categories
      description: List categories
      parameters:
        - name: parentId
          in: query
          description: Filter by parent category id
          type: string
          format: uuid
        - name: search
          in: query
          description: Search by free-text query
          required: false
          type: string
        - name: slug
          in: query
          description: Filter by category slug
          required: false
          type: string
        - name: sort
          description: Sort results. See CategoryListSort for sort options
          in: query
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: firstResult
          in: query
          description: First result
          required: false
          type: integer
          format: int64
        - name: maxResults
          in: query
          description: Max results
          required: false
          type: integer
          format: int64
      tags:
        - Categories
      responses:
        200:
          description: An array of categories
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    post:
      operationId: createCategory
      summary: Create category
      description: Create category
      parameters:
        - name: payload
          in: body
          description: Payload
          required: true
          schema:
            $ref: '#/definitions/Category'
      tags:
        - Categories
      responses:
        200:
          description: Created category
          schema:
            $ref: '#/definitions/Category'
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/categories/{categoryId}':
    get:
      operationId: findCategory
      summary: Finds an category
      description: Find category
      parameters:
        - name: categoryId
          required: true
          in: path
          description: Category id
          type: string
          format: uuid
      tags:
        - Categories
      responses:
        200:
          description: A category
          schema:
            $ref: '#/definitions/Category'
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    put:
      operationId: updateCategory
      summary: updates an category
      description: Update category
      parameters:
        - name: categoryId
          required: true
          in: path
          description: Category id
          type: string
          format: uuid
        - name: payload
          in: body
          description: Payload
          required: true
          schema:
            $ref: '#/definitions/Category'
      tags:
        - Categories
      responses:
        200:
          description: Updated category
          schema:
            $ref: '#/definitions/Category'
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    delete:
      operationId: deleteCategory
      summary: deletes an category
      description: Delete category
      parameters:
        - name: categoryId
          required: true
          in: path
          description: Category id
          type: string
          format: uuid
      tags:
        - Categories
      responses:
        204:
          description: Empty resonse indicating a successful removal
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'

  /locations:
    get:
      operationId: listLocations
      summary: List locations
      description: List locations
      parameters:
        - name: search
          in: query
          description: Search by free-text query
          required: false
          type: string
        - name: slug
          in: query
          description: Filter by location slug
          required: false
          type: string
        - name: sort
          description: Sort results. See LocationListSort for sort options
          in: query
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: firstResult
          in: query
          description: First result
          required: false
          type: integer
          format: int64
        - name: maxResults
          in: query
          description: Max results
          required: false
          type: integer
          format: int64
      tags:
        - Locations
      responses:
        200:
          description: An array of locations
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    post:
      operationId: createLocation
      summary: Create location
      description: Create location
      parameters:
        - name: payload
          in: body
          description: Payload
          required: true
          schema:
            $ref: '#/definitions/Location'
      tags:
        - Locations
      responses:
        200:
          description: Created location
          schema:
            $ref: '#/definitions/Location'
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
  '/locations/{locationId}':
    get:
      operationId: findLocation
      summary: Finds an location
      description: Find location
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location id
          type: string
          format: uuid
      tags:
        - Locations
      responses:
        200:
          description: A location
          schema:
            $ref: '#/definitions/Location'
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    put:
      operationId: updateLocation
      summary: updates an location
      description: Update location
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location id
          type: string
          format: uuid
        - name: payload
          in: body
          description: Payload
          required: true
          schema:
            $ref: '#/definitions/Location'
      tags:
        - Locations
      responses:
        200:
          description: Updated location
          schema:
            $ref: '#/definitions/Location'
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'
    delete:
      operationId: deleteLocation
      summary: deletes an location
      description: Delete location
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location id
          type: string
          format: uuid
      tags:
        - Locations
      responses:
        204:
          description: Empty resonse indicating a successful removal
        400:
          description: Invalid request was sent to the server
          schema:
            $ref: '#/definitions/BadRequest'
        403:
          description: Attempted to make a call with unauthorized client
          schema:
            $ref: '#/definitions/Forbidden'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerError'

definitions:
  LocalizedValue: 
    type: object
    required:
      - language
      - value
      - type
    properties:
      language:
        type: string
        minLength: 2
        maxLength: 2        
      value:
        type: string
      type:
        type: string      
        
  Address:
    type: object
    properties:
      streetAddress:
        description: Street address.
        type: string
      postalCode:
        description: 'Postal code, for example 00010.'
        type: string
      postOffice:
        description: Post office
        type: string
      country:
        description: 'Country code (ISO 3166-1 alpha-2), for example FI.'
        type: string
      additionalInformations:
        description: Localized list of additional information about the address.
        type: array
        items:
          $ref: '#/definitions/LocalizedValue'
          
  Coordinate:
    type: object
    properties:
      crs:
        type: string
      latitude:
        description: latitude coordinate.
        type: string
      longitude:
        description: longitude coordinate.
        type: string
        
  Category:
    type: object
    properties:
      id:
        description: Category id
        type: string
        format: uuid
      parentId:
        description: Category parent id.
        type: string
        format: uuid
      title:
        type: array
        description: Title of the category, multilingual
        items:
          $ref: '#/definitions/LocalizedValue'
      slug:
        description: Category slug
        type: string
      meta:
        type: array
        description: Meta parameters
        items:
          $ref: '#/definitions/Meta'
        
  Price:
    type: object
    properties:
      price:
        type: string
        description: price with two decimal places. e.g. 13.00
      currency:
        description: Currency code (ISO 4217)
        type: string
        
  Location:
    type: object
    required:
    - name
    properties:
      id:
        description: Location id
        type: string
        format: uuid
      name:
        type: array
        description: Name of the location, multilingual
        items:
          $ref: '#/definitions/LocalizedValue'
      coordinate:
        $ref: '#/definitions/Coordinate'
      address:
        $ref: '#/definitions/Address'
  
  Image:
    type: object
    required:
      - url
      - type
    properties:
      id:
        description: Image id
        type: string
        format: uuid
      url:
        description: Image URL
        type: string
      type:
        description: Image type
        type: string

  Item:
    type: object
    required:
      - amount
      - typeOfBusiness
      - categoryId
      - paymentMethods
    properties:
      id:
        description: Item id
        type: string
        format: uuid
      typeOfBusiness:
        type: string
        enum: 
          - SALE
          - PURCHASE
      title:
        type: array
        description: Title of the item, multilingual
        items:
          $ref: '#/definitions/LocalizedValue'
      description:
        type: array
        description: Description of the item, multilingual
        items:
          $ref: '#/definitions/LocalizedValue'
      categoryId:
        description: Category id.
        type: string
        format: uuid
      locationId:
        description: Location id.
        type: string
        format: uuid
      resourceId:
        description: Resource id.
        type: string
        format: uuid
      slug:
        description: Item slug
        type: string
      sellerId:
        description: Sellers user id
        type: string
        format: uuid
      createdAt:
        type: string
        format: date-time
      modifiedAt:
        type: string
        format: date-time
      expiresAt:
        type: string
        format: date-time
      images:
        type: array
        items: 
          $ref: '#/definitions/Image'
      visibleToUsers:
        type: array
        items: 
          type: string
          format: uuid
      visibilityLimited:
        type: boolean
      unitPrice:
        $ref: '#/definitions/Price'
      unit:
        type: string
      amount:
        type: integer
        format: int64
      reservedAmount:
        type: integer
        format: int64
      soldAmount:
        type: integer
        format: int64
      paymentMethods:
        required:
          - allowCreditCard
          - allowContactSeller
        type: object
        properties:
          allowCreditCard: 
            type: boolean
          allowContactSeller:
            type: boolean
      deliveryPrice:
        $ref: '#/definitions/Price'
      allowDelivery:
        type: boolean
      allowPickup:
        type: boolean
      termsOfDelivery:
        type: string
      deliveryTime:
        type: integer
      contactEmail:
        type: string
        format: email
      contactPhone:
        type: string
      businessName:
        type: string
      businessCode:
        type: string
      meta:
        type: array
        description: Item meta
        items:
          $ref: '#/definitions/Meta'

  ItemReservation:
    type: object
    properties:
      id:
        description: Item id
        type: string
        format: uuid
      amount:
        type: integer
        format: int64
        
  ItemListSort:
    type: string
    enum:
      - CREATED_AT_DESC
      - CREATED_AT_ASC
      - MODIFIED_AT_DESC
      - MODIFIED_AT_ASC
      - SCORE_DESC
      - SCORE_ASC

  CategoryListSort:
    type: string
    enum:
      - CREATED_AT_DESC
      - CREATED_AT_ASC
      - MODIFIED_AT_DESC
      - MODIFIED_AT_ASC
      - SCORE_DESC
      - SCORE_ASC

  LocationListSort:
    type: string
    enum:
      - CREATED_AT_DESC
      - CREATED_AT_ASC
      - MODIFIED_AT_DESC
      - MODIFIED_AT_ASC
      - SCORE_DESC
      - SCORE_ASC
      
  Meta:
    type: object
    description: Key-value pair that can be used to add meta data to objects (items, categories, etc)
    required:
      - key
      - value
    properties:
      key:
        type: string
      value:
        type: string
        
  InternalServerError:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
        
  Forbidden:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
        
  BadRequest:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
        
  NotImplemented:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
        
  NotFound:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
